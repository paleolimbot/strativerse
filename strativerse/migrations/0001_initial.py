# Generated by Django 2.1.3 on 2018-11-21 17:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import strativerse.geometry
import strativerse.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'aliases',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='attachment', max_length=55)),
                ('key', models.CharField(max_length=55, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_]+$', message='Must only contain alphanumerics or the underscore')])),
                ('comment', models.CharField(max_length=512)),
                ('file', models.FileField(upload_to='attachments')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['type', 'key'],
            },
        ),
        migrations.CreateModel(
            name='Authorship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=55)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['role', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('telephone', models.CharField(blank=True, max_length=55)),
                ('address', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'contact info',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_wkt', models.TextField(blank=True, validators=[strativerse.geometry.validate_wkt])),
                ('geo_error', models.FloatField(default=0)),
                ('geo_elev', models.FloatField(default=0)),
                ('geo_elev_error', models.FloatField(default=0)),
                ('geo_xmin', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_xmax', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_ymin', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_ymax', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_type', models.CharField(blank=True, editable=False, max_length=55)),
                ('recursive_depth', models.IntegerField(default=0, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('feature', 'Feature'), ('water_body', 'Water Body'), ('glacier', 'Glacier'), ('bog', 'Bog'), ('geopolitical_unit', 'Geopolitical Unit'), ('region', 'Region')], default='feature', max_length=55)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='strativerse.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given_names', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('suffix', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'verbose_name_plural': 'people',
                'ordering': ['last_name', 'given_names'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=55, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('biblatex', models.TextField(validators=[strativerse.models.validate_biblatex])),
                ('doi', models.CharField(blank=True, max_length=255)),
                ('url', models.URLField(blank=True)),
                ('year', models.IntegerField()),
            ],
            options={
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_wkt', models.TextField(blank=True, validators=[strativerse.geometry.validate_wkt])),
                ('geo_error', models.FloatField(default=0)),
                ('geo_elev', models.FloatField(default=0)),
                ('geo_elev_error', models.FloatField(default=0)),
                ('geo_xmin', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_xmax', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_ymin', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_ymax', models.FloatField(blank=True, default=None, editable=False, null=True)),
                ('geo_type', models.CharField(blank=True, editable=False, max_length=55)),
                ('name', models.CharField(max_length=255)),
                ('date_collected', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('sediment_core', 'Sediment Core'), ('ice_core', 'Ice Core'), ('peat_core', 'Peat Core'), ('water_sample', 'Water Sample'), ('section', 'Section'), ('historical_measurements', 'Historical Measurements')], max_length=55)),
                ('resolution', models.CharField(choices=[('lt_daily', 'Less than daily'), ('daily', 'Daily'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('decadal', 'Decadal'), ('centennial', 'Centennial'), ('millennial', 'Millennial'), ('gt_millennial', 'Greater than millennial')], max_length=55)),
                ('min_year', models.FloatField()),
                ('max_year', models.FloatField()),
                ('feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='strativerse.Feature')),
            ],
            options={
                'ordering': ['date_collected'],
            },
        ),
        migrations.CreateModel(
            name='RecordAuthorship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('assisted', 'Assisted'), ('collected', 'Collected'), ('funded', 'Funded'), ('analyzed', 'Analyzed'), ('published', 'Published'), ('maintains', 'Maintains')], default='assisted', max_length=55)),
                ('order', models.IntegerField(default=0)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='record_authorships', to='strativerse.Person')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_authorships', to='strativerse.Record')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='RecordReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('refers_to', 'Refers to'), ('contains_data_from', 'Contains data from')], default='refers_to', max_length=55)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_uses', to='strativerse.Publication')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_uses', to='strativerse.Record')),
            ],
            options={
                'ordering': ['publication__date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='tag', max_length=55)),
                ('key', models.CharField(max_length=55, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_]+$', message='Must only contain alphanumerics or the underscore')])),
                ('value', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=512)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['type', 'key'],
            },
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='strativerse.Person'),
        ),
        migrations.AddField(
            model_name='authorship',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='authorships', to='strativerse.Person'),
        ),
        migrations.AddField(
            model_name='authorship',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorships', to='strativerse.Publication'),
        ),
        migrations.AddField(
            model_name='alias',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='strativerse.Person'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('content_type', 'object_id', 'type', 'key')},
        ),
        migrations.AlterUniqueTogether(
            name='attachment',
            unique_together={('content_type', 'object_id', 'type', 'key')},
        ),
        migrations.AlterUniqueTogether(
            name='alias',
            unique_together={('person', 'alias')},
        ),
    ]
